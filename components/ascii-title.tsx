"use client"

import { useState, useEffect } from "react"

export default function AsciiTitle({ selectedOption }: { selectedOption?: string }) {
  const [currentBannerIndex, setCurrentBannerIndex] = useState(0)

  const banners = [
    `
██╗    ██╗███████╗███████╗███╗   ███╗
██║    ██║██╔════╝██╔════╝████╗ ████║
██║ █╗ ██║█████╗  ███████╗██╔████╔██║
██║███╗██║██╔══╝  ╚════██║██║╚██╔╝██║
╚███╔███╔╝███████╗███████║██║ ╚═╝ ██║
 ╚══╝╚══╝ ╚══════╝╚══════╝╚═╝     ╚═╝
`,
    `

                                  $$\\                                         
                                  $$ |                      
$$\\  $$\\  $$\\  $$$$$$\\   $$$$$$$\\ $$ | $$$$$$\\  $$\\   $$\\   
$$ | $$ | $$ |$$  __$$\\ $$  _____|$$ |$$  __$$\\ $$ |  $$ |  
$$ | $$ | $$ |$$$$$$$$ |\\$$$$$$\\  $$ |$$$$$$$$ |$$ |  $$ |  
$$ | $$ | $$ |$$   ____| \\____$$\\ $$ |$$   ____|$$ |  $$ |  
\\$$$$$\\$$$$  |\\$$$$$$$\\ $$$$$$$  |$$ |\\$$$$$$$\\ \\$$$$$$$ |  
 \\_____\\____/  \\_______|\\______/ \\__| \\_______| \\____$$ |  
                                                $$\\   $$ |  
                                                \\$$$$$$  |  
                                                 \\______/

`,
    `                                 
                  (              
 (  (      (      )\\   (   (     
 )\\))(    ))\\ (  ((_) ))\\  )\\ )  
((_)()\\  /((_))\\  _  /((_)(()/(  
_(()((_)(_)) ((_)| |(_))   )(_)) 
\\ V  V // -_)(_-<| |/ -_) | || | 
 \\_/\\_/ \\___|/__/|_|\\___|  \\_, | 
                           |__/

`,
    `
                           ___                       
                          /\\_ \\                      
 __  __  __     __    ____\\//\\ \\      __   __  __    
/\\ \\/\\ \\/\\ \\  /'__\`\\ /',__\\ \\ \\ \\   /'__\`\\/\\ \\/\\ \\   
\\ \\ \\_/ \\_/ \\/\\  __//\\__, \`\\ \\_\\ \\_/\\  __/\\ \\ \\_\\ \\  
 \\ \\___x___/'\\ \\____\\/\\____/ /\\____\\ \\____\\\\/\`____ \\ 
  \\/__//__/   \\/____/\\/___/  \\/____/\\/____/ \`/___/> \\
                                               /\\___/
                                               \\/__/
`,
    `
                                                                
@@@  @@@  @@@  @@@@@@@@   @@@@@@   @@@       @@@@@@@@  @@@ @@@  
@@@  @@@  @@@  @@@@@@@@  @@@@@@@   @@@       @@@@@@@@  @@@ @@@  
@@!  @@!  @@!  @@!       !@@       @@!       @@!       @@! !@@  
!@!  !@!  !@!  !@!       !@!       !@!       !@!       !@! @!!  
@!!  !!@  @!@  @!!!:!    !!@@!!    @!!       @!!!:!     !@!@!   
!@!  !!!  !@!  !!!!!:     !!@!!!   !!!       !!!!!:      @!!!   
!!:  !!:  !!:  !!:            !:!  !!:       !!:         !!:    
:!:  :!:  :!:  :!:           !:!    :!:      :!:         :!:    
 :::: :: :::    :: ::::  :::: ::    :: ::::   :: ::::     ::    
  :: :  : :    : :: ::   :: : :    : :: : :  : :: ::      :                           
                                     
`,
    `


  (\`\\ .-') /\`   ('-.    .-')                ('-.              
   \`.(  OO ),' _(  OO)  (  OO ).            _(  OO)             
,--./  .--.  (,------.(_)---\\_) ,--.     (,------. ,--.   ,--.
|      |  |   |  .---'/    _ |  |  |.-')  |  .---'  \\  \`.'  / 
|  |   |  |,  |  |    \\  :\` \`.  |  | OO ) |  |    .-')     /  
|  |.'.|  |_)(|  '--.  '..\`''.) |  |\`-' |(|  '--.(OO  \\   /   
|         |   |  .--' .-._)   \\(|  '---.' |  .--' |   /  /  
|   ,'.   |   |  \`---.\\\       / |      |  |  \`---.'-./  / 
'--'   '--'   \`------' \`-----'  \`------'  \`------'  \`--'

`,
    `
 ___       ___    _____    _____     __    __    
(  (       )  )  / ___/   / ____\\    \\ \\  / /    
 \\  \\  _  /  /  ( (__    ( (___      () \\/ ()    
  \\  \\/ \\/  /    ) __)    \\___ \\     / _  _ \\    
   )   _   (    ( (           ) )   / / \\/ \\ \\   
   \\  ( )  /     \\ \\___   ___/ /   /_/      \\_\\  
    \\_/ \\_/       \\____\\ /____/   (/          \\) 
                                                 
`,
    `

    :::       ::: :::::::::: ::::::::  :::        :::::::::: :::   ::: 
   :+:       :+: :+:       :+:    :+: :+:        :+:        :+:   :+:  
  +:+       +:+ +:+       +:+        +:+        +:+         +:+ +:+    
 +#+  +:+  +#+ +#++:++#  +#++:++#++ +#+        +#++:++#     +#++:      
+#+ +#+#+ +#+ +#+              +#+ +#+        +#+           +#+        
#+#+# #+#+#  #+#       #+#    #+# #+#        #+#           #+#         
###   ###   ########## ########  ########## ##########    ###          

`
  ]

  // Map sections to specific banner indices
  const sectionToBannerMap: Record<string, number> = {
    "menu": 0,
    "profile": 1,
    "experience": 2,
    "skills": 3,
    "contact": 4,
    "memoir": 5,
    "exit": 6
  }

  // Effect to set the banner based on the selected option
  useEffect(() => {
    if (selectedOption && sectionToBannerMap[selectedOption] !== undefined) {
      setCurrentBannerIndex(sectionToBannerMap[selectedOption])
    }
  }, [selectedOption])

  return (
    <div className="overflow-hidden">
      <pre className="text-purple-400 mb-4 text-xs sm:text-sm overflow-x-auto whitespace-pre-wrap md:whitespace-pre">
        {banners[currentBannerIndex]}
      </pre>
    </div>
  )
}

